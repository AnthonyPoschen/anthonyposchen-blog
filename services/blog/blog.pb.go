// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blog.proto

/*
Package blog is a generated protocol buffer package.

It is generated from these files:
	blog.proto

It has these top-level messages:
	GetBlogRequest
	GetBlogResponse
	GetMultiBlogRequest
	GetMultiBlogResponse
	CreateBlogRequest
	CreateBlogResult
	Blog
	Filter
	DelBlogRequest
	DelBlogResult
*/
package blog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetMultiBlogRequest_Type int32

const (
	GetMultiBlogRequest_ALL   GetMultiBlogRequest_Type = 0
	GetMultiBlogRequest_RANGE GetMultiBlogRequest_Type = 1
)

var GetMultiBlogRequest_Type_name = map[int32]string{
	0: "ALL",
	1: "RANGE",
}
var GetMultiBlogRequest_Type_value = map[string]int32{
	"ALL":   0,
	"RANGE": 1,
}

func (x GetMultiBlogRequest_Type) String() string {
	return proto.EnumName(GetMultiBlogRequest_Type_name, int32(x))
}
func (GetMultiBlogRequest_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Filter_Type int32

const (
	Filter_TITLE  Filter_Type = 0
	Filter_AUTHOR Filter_Type = 1
	Filter_DATE   Filter_Type = 2
	Filter_TAG    Filter_Type = 3
)

var Filter_Type_name = map[int32]string{
	0: "TITLE",
	1: "AUTHOR",
	2: "DATE",
	3: "TAG",
}
var Filter_Type_value = map[string]int32{
	"TITLE":  0,
	"AUTHOR": 1,
	"DATE":   2,
	"TAG":    3,
}

func (x Filter_Type) String() string {
	return proto.EnumName(Filter_Type_name, int32(x))
}
func (Filter_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

type GetBlogRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetBlogRequest) Reset()                    { *m = GetBlogRequest{} }
func (m *GetBlogRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBlogRequest) ProtoMessage()               {}
func (*GetBlogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetBlogRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetBlogResponse struct {
	Blog  *Blog  `protobuf:"bytes,1,opt,name=blog" json:"blog,omitempty"`
	Error string `protobuf:"bytes,404,opt,name=error" json:"error,omitempty"`
}

func (m *GetBlogResponse) Reset()                    { *m = GetBlogResponse{} }
func (m *GetBlogResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlogResponse) ProtoMessage()               {}
func (*GetBlogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetBlogResponse) GetBlog() *Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

func (m *GetBlogResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type GetMultiBlogRequest struct {
	Type   GetMultiBlogRequest_Type `protobuf:"varint,1,opt,name=type,enum=blog.GetMultiBlogRequest_Type" json:"type,omitempty"`
	Start  int64                    `protobuf:"varint,2,opt,name=start" json:"start,omitempty"`
	Number int64                    `protobuf:"varint,3,opt,name=number" json:"number,omitempty"`
	Filter []*Filter                `protobuf:"bytes,4,rep,name=filter" json:"filter,omitempty"`
}

func (m *GetMultiBlogRequest) Reset()                    { *m = GetMultiBlogRequest{} }
func (m *GetMultiBlogRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMultiBlogRequest) ProtoMessage()               {}
func (*GetMultiBlogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetMultiBlogRequest) GetType() GetMultiBlogRequest_Type {
	if m != nil {
		return m.Type
	}
	return GetMultiBlogRequest_ALL
}

func (m *GetMultiBlogRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetMultiBlogRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *GetMultiBlogRequest) GetFilter() []*Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type GetMultiBlogResponse struct {
	Blogs []*Blog `protobuf:"bytes,1,rep,name=blogs" json:"blogs,omitempty"`
	Error string  `protobuf:"bytes,404,opt,name=error" json:"error,omitempty"`
}

func (m *GetMultiBlogResponse) Reset()                    { *m = GetMultiBlogResponse{} }
func (m *GetMultiBlogResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMultiBlogResponse) ProtoMessage()               {}
func (*GetMultiBlogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetMultiBlogResponse) GetBlogs() []*Blog {
	if m != nil {
		return m.Blogs
	}
	return nil
}

func (m *GetMultiBlogResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type CreateBlogRequest struct {
	Blog *Blog `protobuf:"bytes,1,opt,name=blog" json:"blog,omitempty"`
}

func (m *CreateBlogRequest) Reset()                    { *m = CreateBlogRequest{} }
func (m *CreateBlogRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateBlogRequest) ProtoMessage()               {}
func (*CreateBlogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateBlogRequest) GetBlog() *Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

type CreateBlogResult struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Error string `protobuf:"bytes,404,opt,name=error" json:"error,omitempty"`
}

func (m *CreateBlogResult) Reset()                    { *m = CreateBlogResult{} }
func (m *CreateBlogResult) String() string            { return proto.CompactTextString(m) }
func (*CreateBlogResult) ProtoMessage()               {}
func (*CreateBlogResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateBlogResult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateBlogResult) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type Blog struct {
	ID          int64    `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Title       string   `protobuf:"bytes,2,opt,name=Title" json:"Title,omitempty"`
	Content     string   `protobuf:"bytes,3,opt,name=Content" json:"Content,omitempty"`
	PublishDate string   `protobuf:"bytes,4,opt,name=PublishDate" json:"PublishDate,omitempty"`
	Author      string   `protobuf:"bytes,5,opt,name=Author" json:"Author,omitempty"`
	Tags        []string `protobuf:"bytes,6,rep,name=Tags" json:"Tags,omitempty"`
	Category    string   `protobuf:"bytes,7,opt,name=Category" json:"Category,omitempty"`
}

func (m *Blog) Reset()                    { *m = Blog{} }
func (m *Blog) String() string            { return proto.CompactTextString(m) }
func (*Blog) ProtoMessage()               {}
func (*Blog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Blog) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Blog) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Blog) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Blog) GetPublishDate() string {
	if m != nil {
		return m.PublishDate
	}
	return ""
}

func (m *Blog) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Blog) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Blog) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

type Filter struct {
	Type    Filter_Type `protobuf:"varint,1,opt,name=type,enum=blog.Filter_Type" json:"type,omitempty"`
	Value   string      `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Details string      `protobuf:"bytes,3,opt,name=details" json:"details,omitempty"`
}

func (m *Filter) Reset()                    { *m = Filter{} }
func (m *Filter) String() string            { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()               {}
func (*Filter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Filter) GetType() Filter_Type {
	if m != nil {
		return m.Type
	}
	return Filter_TITLE
}

func (m *Filter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Filter) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

type DelBlogRequest struct {
	ID int64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
}

func (m *DelBlogRequest) Reset()                    { *m = DelBlogRequest{} }
func (m *DelBlogRequest) String() string            { return proto.CompactTextString(m) }
func (*DelBlogRequest) ProtoMessage()               {}
func (*DelBlogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DelBlogRequest) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type DelBlogResult struct {
	Ok    bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *DelBlogResult) Reset()                    { *m = DelBlogResult{} }
func (m *DelBlogResult) String() string            { return proto.CompactTextString(m) }
func (*DelBlogResult) ProtoMessage()               {}
func (*DelBlogResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DelBlogResult) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *DelBlogResult) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*GetBlogRequest)(nil), "blog.GetBlogRequest")
	proto.RegisterType((*GetBlogResponse)(nil), "blog.GetBlogResponse")
	proto.RegisterType((*GetMultiBlogRequest)(nil), "blog.GetMultiBlogRequest")
	proto.RegisterType((*GetMultiBlogResponse)(nil), "blog.GetMultiBlogResponse")
	proto.RegisterType((*CreateBlogRequest)(nil), "blog.createBlogRequest")
	proto.RegisterType((*CreateBlogResult)(nil), "blog.createBlogResult")
	proto.RegisterType((*Blog)(nil), "blog.Blog")
	proto.RegisterType((*Filter)(nil), "blog.Filter")
	proto.RegisterType((*DelBlogRequest)(nil), "blog.delBlogRequest")
	proto.RegisterType((*DelBlogResult)(nil), "blog.delBlogResult")
	proto.RegisterEnum("blog.GetMultiBlogRequest_Type", GetMultiBlogRequest_Type_name, GetMultiBlogRequest_Type_value)
	proto.RegisterEnum("blog.Filter_Type", Filter_Type_name, Filter_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BlogService service

type BlogServiceClient interface {
	GetBlog(ctx context.Context, in *GetBlogRequest, opts ...grpc.CallOption) (*GetBlogResponse, error)
	GetMultiBlog(ctx context.Context, in *GetMultiBlogRequest, opts ...grpc.CallOption) (*GetMultiBlogResponse, error)
	CreateBlog(ctx context.Context, in *CreateBlogRequest, opts ...grpc.CallOption) (*CreateBlogResult, error)
	DeleteBlog(ctx context.Context, in *DelBlogRequest, opts ...grpc.CallOption) (*DelBlogResult, error)
}

type blogServiceClient struct {
	cc *grpc.ClientConn
}

func NewBlogServiceClient(cc *grpc.ClientConn) BlogServiceClient {
	return &blogServiceClient{cc}
}

func (c *blogServiceClient) GetBlog(ctx context.Context, in *GetBlogRequest, opts ...grpc.CallOption) (*GetBlogResponse, error) {
	out := new(GetBlogResponse)
	err := grpc.Invoke(ctx, "/blog.BlogService/getBlog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) GetMultiBlog(ctx context.Context, in *GetMultiBlogRequest, opts ...grpc.CallOption) (*GetMultiBlogResponse, error) {
	out := new(GetMultiBlogResponse)
	err := grpc.Invoke(ctx, "/blog.BlogService/getMultiBlog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) CreateBlog(ctx context.Context, in *CreateBlogRequest, opts ...grpc.CallOption) (*CreateBlogResult, error) {
	out := new(CreateBlogResult)
	err := grpc.Invoke(ctx, "/blog.BlogService/createBlog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) DeleteBlog(ctx context.Context, in *DelBlogRequest, opts ...grpc.CallOption) (*DelBlogResult, error) {
	out := new(DelBlogResult)
	err := grpc.Invoke(ctx, "/blog.BlogService/deleteBlog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BlogService service

type BlogServiceServer interface {
	GetBlog(context.Context, *GetBlogRequest) (*GetBlogResponse, error)
	GetMultiBlog(context.Context, *GetMultiBlogRequest) (*GetMultiBlogResponse, error)
	CreateBlog(context.Context, *CreateBlogRequest) (*CreateBlogResult, error)
	DeleteBlog(context.Context, *DelBlogRequest) (*DelBlogResult, error)
}

func RegisterBlogServiceServer(s *grpc.Server, srv BlogServiceServer) {
	s.RegisterService(&_BlogService_serviceDesc, srv)
}

func _BlogService_GetBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).GetBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/GetBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).GetBlog(ctx, req.(*GetBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_GetMultiBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMultiBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).GetMultiBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/GetMultiBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).GetMultiBlog(ctx, req.(*GetMultiBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_CreateBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).CreateBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/CreateBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).CreateBlog(ctx, req.(*CreateBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_DeleteBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).DeleteBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/DeleteBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).DeleteBlog(ctx, req.(*DelBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blog.BlogService",
	HandlerType: (*BlogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getBlog",
			Handler:    _BlogService_GetBlog_Handler,
		},
		{
			MethodName: "getMultiBlog",
			Handler:    _BlogService_GetMultiBlog_Handler,
		},
		{
			MethodName: "createBlog",
			Handler:    _BlogService_CreateBlog_Handler,
		},
		{
			MethodName: "deleteBlog",
			Handler:    _BlogService_DeleteBlog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "blog.proto",
}

func init() { proto.RegisterFile("blog.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 579 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0x7f, 0x53, 0x4f, 0x4a, 0x70, 0xa7, 0x69, 0x59, 0x7c, 0xa8, 0x2c, 0x0b, 0xa4, 0x9c,
	0x22, 0x94, 0x0a, 0x89, 0x9e, 0x90, 0x69, 0x42, 0x1a, 0x29, 0x50, 0x64, 0xcc, 0x03, 0x38, 0xcd,
	0xe2, 0x5a, 0x35, 0x71, 0xb0, 0xd7, 0x95, 0xf2, 0x0e, 0x5c, 0x90, 0x78, 0x10, 0xae, 0xbc, 0x1d,
	0xda, 0x5d, 0xc7, 0x38, 0x69, 0x23, 0x6e, 0x9e, 0x99, 0x6f, 0x66, 0x76, 0xbe, 0x6f, 0xc6, 0x00,
	0xf3, 0x34, 0x8b, 0x07, 0xab, 0x3c, 0x63, 0x19, 0xea, 0xfc, 0xdb, 0x73, 0xa1, 0x3b, 0xa1, 0xec,
	0x5d, 0x9a, 0xc5, 0x01, 0xfd, 0x5e, 0xd2, 0x82, 0x61, 0x17, 0xd4, 0x64, 0x41, 0x14, 0x57, 0xe9,
	0x6b, 0x81, 0x9a, 0x2c, 0xbc, 0x2b, 0x78, 0x5a, 0x23, 0x8a, 0x55, 0xb6, 0x2c, 0x28, 0x9e, 0x81,
	0x48, 0x16, 0xa0, 0xce, 0x10, 0x06, 0xa2, 0xaa, 0x40, 0x08, 0x3f, 0x9e, 0x80, 0x41, 0xf3, 0x3c,
	0xcb, 0xc9, 0x2f, 0xcd, 0x55, 0xfa, 0x56, 0x20, 0x2d, 0xef, 0x8f, 0x02, 0xc7, 0x13, 0xca, 0x3e,
	0x94, 0x29, 0x4b, 0x9a, 0x1d, 0x87, 0xa0, 0xb3, 0xf5, 0x8a, 0x8a, 0x72, 0xdd, 0xe1, 0x99, 0x2c,
	0xf7, 0x08, 0x70, 0x10, 0xae, 0x57, 0x34, 0x10, 0x58, 0xec, 0x81, 0x51, 0xb0, 0x28, 0x67, 0x44,
	0x15, 0x0f, 0x95, 0x06, 0x9e, 0x82, 0xb9, 0x2c, 0xbf, 0xcd, 0x69, 0x4e, 0x34, 0xe1, 0xae, 0x2c,
	0x7c, 0x01, 0xe6, 0xd7, 0x24, 0x65, 0x34, 0x27, 0xba, 0xab, 0xf5, 0x3b, 0xc3, 0x43, 0xd9, 0xe3,
	0xbd, 0xf0, 0x05, 0x55, 0xcc, 0x73, 0x40, 0xe7, 0x1d, 0xb0, 0x0d, 0x9a, 0x3f, 0x9b, 0xd9, 0x2d,
	0xb4, 0xc0, 0x08, 0xfc, 0x8f, 0x93, 0xb1, 0xad, 0x78, 0xd7, 0xd0, 0xdb, 0x7e, 0x51, 0x45, 0x85,
	0x0b, 0x06, 0x2f, 0x55, 0x10, 0x45, 0x14, 0x6e, 0x72, 0x21, 0x03, 0xfb, 0xc8, 0x38, 0x87, 0xa3,
	0x9b, 0x9c, 0x46, 0x8c, 0x36, 0x99, 0xf8, 0x0f, 0xb1, 0xde, 0x05, 0xd8, 0xcd, 0xa4, 0xa2, 0x4c,
	0x9b, 0x7a, 0x59, 0x5c, 0xaf, 0x7d, 0xfd, 0x7e, 0x2b, 0xa0, 0xf3, 0x2c, 0x8e, 0x9f, 0x8e, 0x36,
	0xfa, 0x4e, 0x47, 0x9c, 0xc9, 0x30, 0x61, 0x29, 0x15, 0x4c, 0x5a, 0x81, 0x34, 0x90, 0x40, 0xfb,
	0x32, 0x5b, 0x32, 0xba, 0x64, 0x44, 0x96, 0xd9, 0x98, 0xe8, 0x42, 0xe7, 0x53, 0x39, 0x4f, 0x93,
	0xe2, 0x76, 0x14, 0x31, 0x4a, 0x74, 0x11, 0x6d, 0xba, 0xb8, 0x0a, 0x7e, 0xc9, 0x6e, 0xb3, 0x9c,
	0x18, 0x22, 0x58, 0x59, 0x88, 0xa0, 0x87, 0x51, 0x5c, 0x10, 0xd3, 0xd5, 0xfa, 0x56, 0x20, 0xbe,
	0xd1, 0x81, 0x83, 0xcb, 0x88, 0xd1, 0x38, 0xcb, 0xd7, 0xa4, 0x2d, 0xd0, 0xb5, 0xed, 0xfd, 0x54,
	0xc0, 0x94, 0x12, 0xe1, 0xcb, 0xad, 0x15, 0x39, 0x6a, 0xca, 0xb7, 0xb3, 0x15, 0xf7, 0x51, 0x5a,
	0xd6, 0xb3, 0x08, 0x83, 0xcf, 0xb2, 0xa0, 0x2c, 0x4a, 0xd2, 0x62, 0x33, 0x4b, 0x65, 0x7a, 0xaf,
	0x2a, 0xc5, 0x2d, 0x30, 0xc2, 0x69, 0x38, 0x1b, 0xdb, 0x2d, 0x04, 0x30, 0xfd, 0x2f, 0xe1, 0xd5,
	0x75, 0x60, 0x2b, 0x78, 0x00, 0xfa, 0xc8, 0x0f, 0xc7, 0xb6, 0xca, 0x57, 0x22, 0xf4, 0x27, 0xb6,
	0xc6, 0xef, 0x65, 0x41, 0xd3, 0x9d, 0x7b, 0x69, 0xf2, 0xe9, 0xbd, 0x86, 0x27, 0x35, 0x62, 0x23,
	0x50, 0x76, 0x27, 0x00, 0x07, 0x81, 0x9a, 0xdd, 0xf1, 0x47, 0x4a, 0x81, 0xd4, 0x86, 0x3e, 0xc3,
	0x1f, 0x2a, 0x74, 0x78, 0xd2, 0x67, 0x9a, 0xdf, 0x27, 0x37, 0x14, 0xdf, 0x40, 0x3b, 0x96, 0x67,
	0x87, 0xbd, 0xfa, 0x22, 0x1a, 0x7d, 0x9d, 0x93, 0x1d, 0xaf, 0x5c, 0x48, 0xaf, 0x85, 0x13, 0x38,
	0x8c, 0x1b, 0xab, 0x8a, 0xcf, 0xf7, 0x1e, 0x94, 0xe3, 0x3c, 0x16, 0xaa, 0x0b, 0xbd, 0x05, 0xf8,
	0xb7, 0x6d, 0xf8, 0x4c, 0x62, 0x1f, 0x2c, 0xad, 0x73, 0xfa, 0x30, 0xc0, 0xe7, 0xf6, 0x5a, 0x78,
	0x01, 0xb0, 0xa0, 0x29, 0xad, 0x0a, 0x54, 0x63, 0x6c, 0xd3, 0xe7, 0x1c, 0xef, 0x78, 0x65, 0xea,
	0xdc, 0x14, 0x3f, 0xa9, 0xf3, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x67, 0x9e, 0x44, 0x92, 0xb2,
	0x04, 0x00, 0x00,
}
